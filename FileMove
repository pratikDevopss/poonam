import java.io.*;
import java.nio.file.*;
import java.util.*;

public class FileCopyLatest {
    public static void main(String[] args) {
        try {
            // Load properties from config.properties file
            Properties properties = new Properties();
            properties.load(new FileInputStream("config.properties"));

            // Get the search directory path
            String searchDirectory = properties.getProperty("searchDirectory");

            // Iterate through properties to find mappings
            for (String key : properties.stringPropertyNames()) {
                if (key.startsWith("keyword")) {
                    String keyword = properties.getProperty(key);
                    String destinationKey = key.replace("keyword", "destination");
                    String destinationPath = properties.getProperty(destinationKey);

                    // Search for files containing the keyword
                    File[] matchingFiles = searchFilesContainingKeyword(searchDirectory, keyword);

                    // Copy the latest file to the destination path
                    File latestFile = getLatestFileWithCopy(matchingFiles);
                    if (latestFile != null) {
                        File destinationFolder = new File(destinationPath);
                        if (!destinationFolder.exists()) {
                            destinationFolder.mkdirs(); // Create destination folder if it doesn't exist
                        }
                        File destinationFile = new File(destinationPath, latestFile.getName());
                        copyFile(latestFile, destinationFile);
                        System.out.println("Copied latest file with 'Copy': " + latestFile.getName() + " to: " + destinationPath);
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static File[] searchFilesContainingKeyword(String searchDirectory, String keyword) {
        List<File> matchingFilesList = new ArrayList<>();
        File directory = new File(searchDirectory);
        searchFiles(directory, keyword, matchingFilesList);
        return matchingFilesList.toArray(new File[0]);
    }

    private static void searchFiles(File directory, String keyword, List<File> matchingFilesList) {
        File[] files = directory.listFiles();
        if (files != null) {
            for (File file : files) {
                if (file.isDirectory()) {
                    searchFiles(file, keyword, matchingFilesList);
                } else if (file.getName().startsWith(keyword) && file.getName().contains("Copy")) {
                    matchingFilesList.add(file);
                }
            }
        }
    }

    private static File getLatestFileWithCopy(File[] files) {
        File latestFile = null;
        long latestTimestamp = Long.MIN_VALUE;
        for (File file : files) {
            if (file.getName().matches(".*Copy\\..*")) {
                if (file.lastModified() > latestTimestamp) {
                    latestTimestamp = file.lastModified();
                    latestFile = file;
                }
            }
        }
        return latestFile;
    }

    private static void copyFile(File sourceFile, File destinationFile) throws IOException {
        Path sourcePath = sourceFile.toPath();
        Path destinationPath = destinationFile.toPath();
        Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
    }
}
